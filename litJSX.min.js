(function(){class Data{constructor(parent=null){this.parent=parent}}const STATE={INIT:Symbol("init"),LEAVE:Symbol("leave"),SKIP_SPACE:Symbol("skip_space")};Object.freeze(STATE);class Context{constructor(rule,str){this.rule=rule;this.data=new Data;this.finished=false;this.state=STATE.INIT;this.stack=[];this.current;this.str=str;this.ptr=0;Object.defineProperty(this,"current",{get:()=>{return this.stack[this.stack.length-1]}})}enter(){this.data=new Data(this.data)}leave(){if(this.data.parent!=null){this.data=this.data.parent}else{this.finished=true;return}}run(){this.stack.push(this.rule);while(!this.finished){if(typeof this.state==="object"){this.stack.push(this.state);this.state=STATE.INIT;this.enter()}else if(this.state===STATE.LEAVE){this.stack.pop();this.leave();this.state=STATE.INIT}if(this.current==null){this.finished=true;break}this.current[this.state](this)}return this.data}walk(regex){let ptr=this.ptr;let result=null;regex.lastIndex=0;while(ptr<this.str.length&&!regex.test(this.str.slice(ptr))){regex.lastIndex=0;ptr++}if(ptr>=this.str.length){if(regex.test(this.str.slice(ptr))){let oldPtr=this.ptr;this.ptr=ptr;return this.str.slice(oldPtr,ptr)}else{return null}}else{let oldPtr=this.ptr;this.ptr=ptr;return this.str.slice(oldPtr,ptr)}}expect(regex){regex.lastIndex=0;return regex.test(this.str.slice(this.ptr))}}var regexs={until_not_space:/^[^\s\r\n]/,until_tag:/^<|^$/};var JSX_STATE=Object.assign({},STATE,{MATCH_TAG:Symbol("match_tag"),TAG:{LEFT:{OPEN:Symbol("open"),CLOSE:Symbol("close")},NAME:Symbol("name"),ATTRIB:{SPREAD:Symbol("spread"),NAME:Symbol("name"),VALUE:Symbol("value")},RIGHT:{OPEN:Symbol("open"),CLOSE:Symbol("close")}}});class JSXElement{constructor(name="",attributes={},elements=[],parent=null){this.name=name;this.attributes=attributes;this.attributeMixins=[];this.elements=elements;this.parent=parent}append(element){this.elements.push(element)}toJSON(){return{name:this.name,attributes:this.attributes,elements:this.elements.map(el=>typeof el==="string"?el:el.toJSON()),attributeMixins:this.attributeMixins}}}var rules={[JSX_STATE.INIT](context){var data=context.data;if(!data.initilized){data.initilized=true;data.tree=new JSXElement("__Fragment__");data.stack=[data.tree];Object.defineProperty(data,"top",{get(){return data.stack[data.stack.length-1]}});data.addAndEnter=function(name,attributes,mixins,elements){var newElement=new JSXElement(name,attributes,elements,data.top);newElement.attributeMixins=mixins||[];data.top.append(newElement);data.stack.push(newElement)};data.add=function(name,attributes,mixins,elements){var newElement=new JSXElement(name,attributes,elements,data.top);newElement.attributeMixins=mixins||[];data.top.append(newElement)};data.leave=function(){data.stack.pop()}}if(context.expect(/^$/)){context.state=JSX_STATE.LEAVE;if(data.stack.length!==1){throw new Error("unclosed tags "+data.stack.slice(1).map(t=>`<${t.name}>`).join(""))}}else{context.state=JSX_STATE.SKIP_SPACE}},[JSX_STATE.SKIP_SPACE](context){context.walk(regexs.until_not_space);context.state=JSX_STATE.MATCH_TAG},[JSX_STATE.MATCH_TAG](context){if(context.expect(/^</)){context.state=this.TAG}else{context.state=this.TEXT}},TAG:{[JSX_STATE.INIT](context){var data=context.data;if(!data.initilized){data.initilized=true;data.attributes={};data.attributeMixins=[];data.name=null;data.left=null;data.attributes={};data.right=null;data.part="left";context.state=this.LEFT;return}if(data.part==="left"){data.part="name";context.state=JSX_STATE.TAG.NAME;return}if(data.part==="name"){data.part="attributes";context.state=this.ATTRIB;return}if(data.part==="attributes"){data.part="right";context.state=this.RIGHT;return}if(data.part==="right"){if(data.left==="close"&&data.right==="close"){throw new Error("both end clossed tag")}else if(data.left==="close"){if(Object.keys(data.attributes).length>0){throw new Error("close tag can't has attribute")}if((data.name||"__Fragment__")!==data.parent.top.name){throw new Error(`wat? <${data.parent.top.name}></${data.name}>`)}data.parent.leave()}else if(data.right==="close"){data.parent.add(data.name||"__Fragment__",data.attributes,data.attributeMixins,[])}else{data.parent.addAndEnter(data.name||"__Fragment__",data.attributes,data.attributeMixins,[])}context.state=JSX_STATE.LEAVE;return}},LEFT:{[JSX_STATE.INIT](context){var data=context.data.parent;if(context.expect(/^<\//)){context.ptr+=2;data.left="close"}else{context.ptr+=1;data.left="open"}context.state=STATE.LEAVE}},[JSX_STATE.TAG.NAME](context){context.walk(regexs.until_not_space);var name=context.walk(/^(\s|\/?>)/);var data=context.data;data.name=name;context.state=STATE.INIT},ATTRIB:{[JSX_STATE.INIT](context){context.walk(regexs.until_not_space);if(context.expect(/^\/?>/)){context.state=STATE.LEAVE}else if(context.expect(/^\.\.\.[^\s]/)){context.state=JSX_STATE.TAG.ATTRIB.SPREAD}else{context.state=JSX_STATE.TAG.ATTRIB.NAME}},[JSX_STATE.TAG.ATTRIB.SPREAD](context){context.ptr+=3;var text=context.walk(/^(\s|\r|\n|\/?>)/);var parentData=context.data.parent;parentData.attributeMixins.push(text);context.state=JSX_STATE.INIT},[JSX_STATE.TAG.ATTRIB.NAME](context){var text=context.walk(/^(=|\s|\/?>)/);var data=context.data;var parentData=context.data.parent;if(text.length===0){throw new Error("attribute without name")}else if(context.expect(/^=[^\s]+/)){context.ptr++;data.name=text;context.state=JSX_STATE.TAG.ATTRIB.VALUE}else if(context.expect(/^=/)){context.ptr++;parentData.attributes[text]="";context.state=JSX_STATE.INIT}else{parentData.attributes[text]="";context.state=JSX_STATE.INIT}},[JSX_STATE.TAG.ATTRIB.VALUE](context){if(context.expect(/^['"']/)){if(context.expect(/^'/)){context.ptr++;var text=context.walk(/^'/);context.ptr++}else{context.ptr++;var text=context.walk(/^"/);context.ptr++}}else{var text=context.walk(/^(\s|\/>|>)/)}var data=context.data;var parentData=context.data.parent;parentData.attributes[data.name]=text;context.state=STATE.INIT}},RIGHT:{[JSX_STATE.INIT](context){var data=context.data.parent;if(context.expect(/^\/>/)){context.ptr+=2;data.right="close"}else{context.ptr+=1;data.right="open"}context.state=STATE.LEAVE}}},TEXT:{[JSX_STATE.INIT](context){var text=context.walk(regexs.until_tag);if(text==null){throw new Error("unknown state, how should I enter here?")}var data=context.data.parent;if(text.match(/[^\s\r\n]/)){data.top.elements.push(text.replace(/[\s|\r|\n]+$/,""))}context.state=JSX_STATE.LEAVE}}};var cache=new Map;function jsx(React,components){return function(strings,...value){let rawJoined=strings.join("\0");if(cache.has(rawJoined)){return cache.get(rawJoined)(React,components,...value)}let placeholders=[];let joined="";let rand=Math.random().toString(16).slice(2,10);for(let i=0;i<strings.length;i++){if(i>0){joined+=`$place_${rand}_${i-1}$`;placeholders.push(`$place_${rand}_${i-1}$`)}joined+=strings[i]}var placeholderRegex=new RegExp(`\\$place_${rand}_\\d+\\$`,"g");var walker=new Context(rules,joined);var tree=walker.run().tree;if(tree.elements.length===1&&typeof tree.elements[0]!=="string"){tree=tree.elements[0]}function codegen(dom){function gen(node){if(typeof node==="string"){return JSON.stringify(node).replace(placeholderRegex,function(match){return'" , '+match+' , "'})}else{return`\n                        React.createElement(${node.name=="__Fragment__"?"React.Fragment":components[node.name]!==undefined?"components."+node.name:JSON.stringify(node.name)}, ${node.attributeMixins.length>0?"Object.assign({}, {"+Object.keys(node.attributes).map(key=>{var prop="";if(key.match(placeholderRegex)){prop+="["+JSON.stringify(key).replace(placeholderRegex,function(match){return'" + '+match+' + "'})+"]"}else{prop+=JSON.stringify(key)}prop+=": ";var value=node.attributes[key];var res=value.match(placeholderRegex);if(res){if(res[0]===value){prop+=res[0]}else{prop+=JSON.stringify(value).replace(placeholderRegex,function(match){return'" + '+match+' + "'})}}else{prop+=JSON.stringify(value)}return prop}).join(",\n")+"}, "+node.attributeMixins.map(function(str){if(!str.match(placeholderRegex)){throw new Error("cannot expand a string "+str)}else{return str.match(placeholderRegex)[0]}}).join(", ")+")":Object.keys(node.attributes).length>0?"{"+Object.keys(node.attributes).map(key=>{var prop="";if(key.match(placeholderRegex)){prop+="["+JSON.stringify(key).replace(placeholderRegex,function(match){return'" + '+match+' + "'})+"]"}else{prop+=JSON.stringify(key)}prop+=": ";var value=node.attributes[key];var res=value.match(placeholderRegex);if(res){if(res[0]===value){prop+=res[0]}else{prop+=JSON.stringify(value).replace(placeholderRegex,function(match){return'" + '+match+' + "'})}}else{prop+=JSON.stringify(value)}return prop}).join(",\n")+"}":"null"}, \n                            ${node.elements.map(gen).join(",\n")}\n                        ) \n                    `}}return"return "+gen(dom).replace(/^[\s\r\n]+/,"")}var code=codegen(tree);var func=new Function("React","components",...placeholders,code);cache.set(rawJoined,func);return func(React,components,...value)}}if(typeof module!=="undefined"){module.exports={STATE:STATE,JSX_STATE:JSX_STATE,rules:rules,Data:Data,Context:Context,JSXElement:JSXElement,jsx:jsx}}else if(typeof window!==undefined){window.litJSX={cache:cache,STATE:STATE,JSX_STATE:JSX_STATE,rules:rules,Data:Data,Context:Context,JSXElement:JSXElement,jsx:jsx}}})();